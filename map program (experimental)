var colors = {
    colorData: [
    /*      ORDER OF COLORS: 0 = null,*/
    color(0,0,0), // 1 = black
    color(81, 255, 38),// , 2 = green, 
    color(79, 153, 19),//3 = darkGreen,
    color(159, 240, 139),//4 = lightGreen
    color(36, 179, 0),//, 5 = darkishGreen
    color(255, 242, 0),//, 6 = yellow,
    color(207, 107, 0),//7 = light brown, 
    color(143, 79, 0),//8 = darkBrown, 
    color(247, 222, 175),//9 = lightPeach,
    color(224, 184, 110),//   10 = darkPeach/Super-lightBrown, 
    color(245, 250, 103),//11 = lightYellow,
    color(209, 0, 0),//12 = darkishRed, 
    color(255,255,255),// 13 = white, 
    color(0, 145, 255),//14 = lightBlue,
    color(135, 0, 0),//15 = darkRed, 
    color(7, 105, 0),//16 = DarkerGreen
    color(14, 30, 201),//17 = darkBlue,
    color(60, 173, 214),// 18 = babyBlue,
    color(229, 232, 35),//19 = gold, 
    color(31, 219, 219),//20 = cyan
    color(255, 255, 255),//,21 = white,
    color(240, 158, 158),//22 = pinkish
    color(196, 242, 235),//, 23 = eyeBlue,
    color(247, 222, 175),//24 = lightPeach,
    color(237, 199, 133),//25 = darkPeach,
    color(21, 148, 127),// 26 = darkCyan,
    color(255, 0, 0),//27 = red
    color(155, 240, 113),//28 = lighterGreen,
    color(20, 201, 56),//29 = lightGreen,
    color(86, 36, 224),//30 = midnightPurple
    color(113, 62, 207),//31 = lightPurple
    color(163, 163, 163),//32 = grey,
    color(195, 104, 237),//33 = brightPurple
    color(173, 17, 17),//34 = darkRed,
    color(255, 255, 0),//35 = yellow,
    color(242, 158, 63),//36 = orange,
    color(224, 143, 56),//37 = darkOrange
    ]};
    
    var Tile = function()
    {if(round(random(1,10)) < 9)
    {return 4;}
    else {return 5;}
    };
var map_sprite = [
{imageData: [
/*floor tile - 1 - corners side*/
[1,31,31,30,31,31,31,31],
[1,31,31,30,30,30,30,30],
[1,31,31,30,31,31,31,31],
[1,31,31,30,31,31,31,31],
[1,30,30,30,31,31,31,31],
[1,31,31,30,31,31,31,31],
[1,31,31,30,30,30,30,30],
[1,31,31,30,31,31,31,31],
], 
},
{imageData: [
/*floor tile - 2 - corners top*/
[1,1,1,1,1,1,1,1],
[30,31,31,30,30,30,30,30],
[30,31,31,30,31,31,31,31],
[30,31,31,30,31,31,31,31],
[30,30,30,30,31,31,31,31],
[30,31,31,30,31,31,31,31],
[30,31,31,30,30,30,30,30],
[30,31,31,30,31,31,31,31],
], 

},{imageData: [
/*floor tile - 3 - corners side*/
[1,1,1,1,1,1,1,1],
[1,31,31,30,30,30,30,30],
[1,31,31,30,31,31,31,31],
[1,31,31,30,31,31,31,31],
[1,30,30,30,31,31,31,31],
[1,31,31,30,31,31,31,31],
[1,31,31,30,30,30,30,30],
[1,31,31,30,31,31,31,31],
], 
},{imageData: [
/*floor tile - 4 - regular*/
[30,31,31,30,31,31,31,31],
[30,31,31,30,30,30,30,30],
[30,31,31,30,31,31,31,31],
[30,31,31,30,31,31,31,31],
[30,30,30,30,31,31,31,31],
[30,31,31,30,31,31,31,31],
[30,31,31,30,30,30,30,30],
[30,31,31,30,31,31,31,31],
], 

},{imageData: [
/*floor tile - 5 - cracked - #5*/
[30,33,31,30,31,32,31,31],
[30,33,31,30,30,30,30,30],
[30,31,31,30,32,33,30,31],
[30,31,31,30,1,1,30,31],
[30,30,30,30,33,34,1,31],
[30,31,31,30,34,32,3,31],
[30,31,31,30,30,30,30,30],
[30,31,31,30,31,31,33,31],
], 
},{imageData: [
/*wall tile - front 1*/
[30,31,31,1,30,30,31,33],
[31,31,31,1,31,31,31,31],
[30,33,31,1,30,30,30,30],
[1,1,1,1,1,1,1,1],
[31,30,1,31,30,31,1,31],
[30,30,1,30,30,30,1,31],
[1,1,1,1,1,1,1,1],
[30,1,31,30,1,30,30,30],
], },
{imageData: [
/*wall tile - front 2*/
[31,31,31,31,30,30,30,30],
[31,31,31,31,31,31,31,31],
[1,1,1,1,1,1,1,1],
[1,1,1,1,1,1,1,1],
[31,30,31,31,30,31,1,31],
[30,30,31,30,30,30,1,31],
[31,31,31,31,31,31,1,31],
[1,1,1,1,1,1,1,1],
], },
{imageData: [
/*wall tile - front 3 - top*/
[31,31,31,30,31,31,31,31],
[31,31,31,30,30,31,31,31],
[30,31,31,31,31,31,30,31],
[31,31,31,30,31,31,31,31],
[31,31,31,30,30,31,31,31],
[31,31,31,31,31,31,31,33],
[30,30,31,30,30,30,31,31],
[31,31,31,31,31,31,31,31],
], },
{imageData: [
/*wall tile -  side 1*/
[30,31,30,1,31,31,1,31],
[30,34,30,1,31,31,1,1],
[30,31,30,1,1,1,1,31],
[30,30,31,1,31,31,1,31],
[31,31,30,1,30,31,1,1],
[1,1,1,1,31,31,1,30],
[33,31,30,1,1,1,1,30],
[31,31,30,1,31,30,1,30],
], },
{imageData: [
/*wall tile -  side 2 - #10*/
[31,31,1,1,30,31,31,1],
[31,31,1,1,1,1,1,1],
[30,31,1,1,31,31,30,1],
[31,31,1,1,30,31,31,1],
[31,31,1,1,30,31,31,1],
[33,31,1,1,31,31,30,1],
[30,31,1,1,31,31,30,1],
[31,31,1,1,31,31,30,1],
], },
{imageData: [
/*wall tile -  side 3*/
[31,31,31,31,30,31,31,31],
[31,31,31,31,31,31,31,31],
[31,31,31,31,31,31,31,31],
[31,31,31,31,31,31,31,31],
[31,31,31,31,31,31,31,31],
[31,31,31,31,31,31,31,31],
[31,31,31,31,31,31,31,31],
[31,31,31,31,31,31,31,31],
], },
{imageData: [
/*wall tile -  corner 1  top*/
[31,31,30,31,31,31,31,31],
[31,31,31,31,30,31,33,31],
[31,31,30,31,31,31,31,31],
[31,31,31,31,30,31,33,31],
[31,31,31,30,30,31,31,31],
[31,31,31,30,31,31,30,31],
[31,31,31,31,31,31,31,31],
[31,31,32,31,30,30,30,31],
], },
{imageData: [
/*wall tile -  corner 1 bottom*/
[1,31,31,31,1,31,31,31],
[31,1,1,1,1,31,31,31],
[30,1,1,31,1,31,31,31],
[1,1,31,1,1,1,1,1],
[31,31,31,1,1,31,31,1],
[1,1,1,1,31,1,1,31],
[30,31,31,1,31,1,1,1],
[31,31,31,1,1,31,1,1],
], },
{imageData: [
/*wall tile -  corner 2 middle*/
[31,31,31,31,30,31,31,31],
[31,31,31,31,31,31,31,31],
[30,31,1,1,1,1,1,1],
[31,31,1,1,1,1,1,1],
[31,31,1,1,1,31,31,1],
[33,31,1,1,31,1,1,31],
[30,31,1,1,31,1,1,31],
[31,31,1,1,1,31,1,1],
], },
];
var GameMap;
var mapSprite = function(sprite,x,y,w,h,flip,vflip,bw){
    noStroke();
    var currentSprite = map_sprite[sprite];
    var yarray = 0;
    var xarray = 0;
    var pyarray = 0;
    var count = 1;
    var last = currentSprite.imageData[yarray][xarray];
    var stop = true;
    pushMatrix();
    translate(x,y);
    for(yarray = 0; yarray < currentSprite.imageData.length; yarray++){
        for(xarray = 0; xarray < currentSprite.imageData[yarray].length; xarray++){
            if(!stop){
                if(last === currentSprite.imageData[yarray][xarray] && pyarray === yarray){
                    last = currentSprite.imageData[yarray][xarray];
                    count+=1;
                }else{
                    stop = true;
                }
            }
            if(stop){
            if(currentSprite.imageData[yarray][xarray] === 0){
                noFill();
                fill(0, 0, 0);
            }else{
                var a;
                if(!bw){
                a = colors.colorData[currentSprite.imageData[yarray][xarray]-1];
                }else{
                a = color(0, 0, 0);
                }
                fill(a);
                pushMatrix();
                if(!flip && !vflip){
                    rect(w * xarray/currentSprite.imageData[yarray].length ,h *yarray/currentSprite.imageData.length, w * 1/currentSprite.imageData[yarray].length,h * 1/currentSprite.imageData.length);
                }else if (flip && !vflip){
                    rect(-w * xarray/currentSprite.imageData[yarray].length+w,h *yarray/currentSprite.imageData.length,-w * 1/currentSprite.imageData[yarray].length,h * 1/currentSprite.imageData.length);
                }
                   else if(vflip && !flip){
                    rect(w * xarray/currentSprite.imageData[yarray].length ,-h *yarray/currentSprite.imageData.length+h, w * 1/currentSprite.imageData[yarray].length,-h * 1/currentSprite.imageData.length);
                }
                else if(vflip && flip){
                    rect(-w * xarray/currentSprite.imageData[yarray].length+w ,-h *yarray/currentSprite.imageData.length+h, -w * 1/currentSprite.imageData[yarray].length,-h * 1/currentSprite.imageData.length);
                }
                popMatrix();
            }
            count = 0;
            stop = true;
            last = currentSprite.imageData[yarray][xarray];
            }}
        pyarray = yarray+1;
    }
    popMatrix();
};
 var drawMap = function(sprite,x,y,w){
    noStroke();
    var currentSprite = GameMap[sprite];
    var tiledata = map_sprite[0];
    var yarray = 0;
    var xarray = 0;
    var pyarray = 0;
    var count = 1;
    var tileWidth = map_sprite[0].imageData.length*(w);
    var tileHeight = map_sprite[0].imageData[0].length*(w);
    var last = currentSprite.imageData[yarray][xarray];
    var stop = true;
pushMatrix();
    translate(x,y);
    for(yarray = 0; yarray < currentSprite.imageData.length; yarray++){
        for(xarray = 0; xarray < currentSprite.imageData[yarray].length; xarray++){
            if(!stop){
                if(last === currentSprite.imageData[yarray][xarray] && pyarray === yarray){
                    last = currentSprite.imageData[yarray][xarray];
                    count+=1;
                }else{
                    stop = true;
                }
            }
            if(stop){
            if(currentSprite.imageData[yarray][xarray] === 0){
                noFill();
                fill(0, 0, 0);
                
            }
            var a;
            var b;
                    for(var i = 0; i < 60;i++)
                    {
                        if(currentSprite.imageData[yarray][xarray] === 15)
                        {
                         //println(i);   
                        currentSprite.imageData[yarray][xarray] = mapSprite(0,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true);
                        }
                      else  if(currentSprite.imageData[yarray][xarray] === 16 )
                        {
                         //println(i);   
                        currentSprite.imageData[yarray][xarray] = mapSprite(8,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true);
                    }
                    else  if(currentSprite.imageData[yarray][xarray] === 17 )
                        {
                         //println(i);   
                        currentSprite.imageData[yarray][xarray] = mapSprite(9,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true);
                    }
                        else if(currentSprite.imageData[yarray][xarray] === 18)
                        {
                         //println(i);   
                        currentSprite.imageData[yarray][xarray] = mapSprite(2,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true);
                        }
                       else if(currentSprite.imageData[yarray][xarray] === 19)
                        {
                         //println(i);   
                        currentSprite.imageData[yarray][xarray] = mapSprite(12,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true);
                        }
                        else if(currentSprite.imageData[yarray][xarray] === 20)
                        {
                         //println(i);   
                        currentSprite.imageData[yarray][xarray] = mapSprite(13,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true);
                        }
                       else if(currentSprite.imageData[yarray][xarray] === 21)
                        {
                            
                        currentSprite.imageData[yarray][xarray] = mapSprite(1,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false,true);
                        }
                        
                       else if(currentSprite.imageData[yarray][xarray] === 22 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(2,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false,true);}
                       else if(currentSprite.imageData[yarray][xarray] === 23 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(12,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false,true);}   
                       else if(currentSprite.imageData[yarray][xarray] === 24 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(13,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false,true);}
                       else if(currentSprite.imageData[yarray][xarray] === 25 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(5,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false,true);}
                        else if(currentSprite.imageData[yarray][xarray] === 26 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(2,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true,true);}
                       else if(currentSprite.imageData[yarray][xarray] === 27 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(6,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false,true);}
                      else  if(currentSprite.imageData[yarray][xarray] === 28 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(12,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true,true);}
                      else  if(currentSprite.imageData[yarray][xarray] === 29 )
                        {
                            //println(i);
                        currentSprite.imageData[yarray][xarray] = mapSprite(13,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,true,true);}
                    else if(currentSprite.imageData[yarray][xarray] === i+1 && i<15)
                        {
                        currentSprite.imageData[yarray][xarray] = mapSprite(i,xarray*tileWidth-70,yarray*tileHeight,tileWidth,tileHeight,false);
                        }    
            }
            count = 0;
            stop = true;
            last = currentSprite.imageData[yarray][xarray];}}
        pyarray = yarray+1;
    }
popMatrix();
};

GameMap = [
    
{imageData: [
[12,8,8,8,8,8,8,8,8,8,12],
[8,14,7,7,7,7,7,7,7,20,8],
[8,10,13,6,6,6,6,6,19,17,8],
[8,10,9,3,2,2,2,18,16,17,8],
[8,10,9,1,Tile(),Tile(),Tile(),15,16,17,8],
[8,10,9,1,Tile(),Tile(),Tile(),15,16,17,8],
[8,10,9,1,Tile(),Tile(),Tile(),15,16,17,8],
[8,10,9,22,21,21,21,26,16,17,8],
[8,10,23,25,25,25,25,25,28,17,8],
[8,24,27,27,27,27,27,27,27,29,8],
[12,8,8,8,8,8,8,8,8,8,12],

],

},];
drawMap(0,70,10,4);
